// <auto-generated />
using System;
using MarinersApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarinersApi.Migrations
{
    [DbContext(typeof(MarinersApiContext))]
    [Migration("20240223220134_AddEFCoreIdentityTables")]
    partial class AddEFCoreIdentityTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MarinersApi.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Average")
                        .HasColumnType("double");

                    b.Property<string>("CreatorId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Homerun")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<double>("OnBase")
                        .HasColumnType("double");

                    b.Property<double>("Ops")
                        .HasColumnType("double");

                    b.Property<double>("Slug")
                        .HasColumnType("double");

                    b.HasKey("PlayerId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Average = 0.27500000000000002,
                            Homerun = 32,
                            Name = "Julio Rodriguez",
                            Number = 44,
                            OnBase = 0.33300000000000002,
                            Ops = 0.81800000000000006,
                            Slug = 0.48499999999999999
                        },
                        new
                        {
                            PlayerId = 2,
                            Average = 0.26600000000000001,
                            Homerun = 19,
                            Name = "JP Crawford",
                            Number = 3,
                            OnBase = 0.38,
                            Ops = 0.81800000000000006,
                            Slug = 0.438
                        },
                        new
                        {
                            PlayerId = 3,
                            Average = 0.23200000000000001,
                            Homerun = 30,
                            Name = "Cal Raleigh",
                            Number = 29,
                            OnBase = 0.30599999999999999,
                            Ops = 0.76200000000000001,
                            Slug = 0.45600000000000002
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("IdentityUserLogin<string>");
                });

            modelBuilder.Entity("MarinersApi.Models.Player", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });
#pragma warning restore 612, 618
        }
    }
}
